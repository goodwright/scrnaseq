{
    "inputs": {
        "sample_options": {
            "name": "Sample options",
            "description": "Parameters relating to the sample being analysed.",
            "advanced": false,
            "properties": {
                "input": {
                    "name": "Samples",
                    "type": "sample",
                    "pattern": "csv|xlsx",
                    "required": true,
                    "description": "The samples to process.",
                    "csv": {
                        "sample": {
                            "property": "name",
                            "user_override": false
                        },
                        "fastq_1": {
                            "property": "input.1",
                            "user_override": false
                        },
                        "fastq_2": {
                            "property": "input.2",
                            "user_override": false
                        },
                        "expected_cells": {
                            "property": "name",
                            "user_override": true
                        }
                    }
                }
            }
        },
        "genome_options": {
            "name": "Genome options",
            "description": "Options for genome reference input.",
            "advanced": false,
            "takes_genome": true,
            "properties": {
                "fasta": {
                    "name": "FASTA",
                    "type": "file",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "required": true,
                    "genome_file": "fasta",
                    "description": "A raw genome FASTA file."
                },
                "gtf": {
                    "name": "GTF",
                    "type": "file",
                    "pattern": "^\\S+\\.gtf(\\.gz)?$",
                    "required": true,
                    "genome_file": "gtf",
                    "description": "An annotation for the genome."
                },
                "transcript_fasta": {
                    "name": "Transcript FASTA",
                    "type": "file",
                    "pattern": "fasta|fa$",
                    "required": false,
                    "description": "FASTA transcriptome file"
                },
                "kallisto_index": {
                    "name": "Kallisto Index",
                    "type": "file",
                    "required": false,
                    "genome_output": {
                        "process": "KALLISTOBUSTOOLS_REF",
                        "filetype": ""
                    },
                    "description": "A genome index built with Kallisto."
                },
                "cellranger_index": {
                    "name": "Cellranger Index",
                    "type": "file",
                    "required": false,
                    "genome_output": {
                        "process": "CELLRANGER_MKREF",
                        "filetype": ""
                    },
                    "description": "A genome index built with Cellranger."
                },
                "universc_index": {
                    "name": "Universc Index",
                    "type": "file",
                    "required": false,
                    "genome_output": {
                        "process": "CELLRANGER_MKREF",
                        "filetype": ""
                    },
                    "description": "A genome index built with Cellranger."
                }, 
                "star_index": {
                    "name": "STAR Index",
                    "type": "file",
                    "required": false,
                    "description": "A genome index built with STAR."
                },
                "salmon_index": {
                    "name": "Salmon Index",
                    "type": "file",
                    "required": false,
                    "description": "A genome index built with Salmon."
                },
                "kallisto_gene_map": {
                    "name": "Kallisto Gene Map",
                    "type": "file",
                    "required": false,
                    "description": "A genome index built with Salmon."
                }
            }
        },
        "pipeline_mode": {
            "name": "Pipeline Mode",
            "description": "Settings to control the primary mode of the pipeline",
            "advanced": false,
            "properties": {
                "aligner": {
                    "name": "Aligner",
                    "description": "Name of the tool to use for scRNA alignment.",
                    "type": "string",
                    "default": "alevin",
                    "required": true,
                    "valid": ["kallisto", "star", "alevin", "cellranger", "universc"]
                },
                "protocol": {
                    "name": "Protocol",
                    "description": "The protocol that was used to generate the single cell data.",
                    "type": "string",
                    "default": "10XV3",
                    "required": true,
                    "valid": ["10XV3", "10XV2", "10XV1", "dropseq"]
                },
                "barcode_whitelist": {
                    "name": "Barcode Whitelist",
                    "description": "If not using the 10X Genomics platform, a custom barcode whitelist can be used",
                    "type": "file",
                    "required": false
                }
            }
        },
        "pipeline_options": {
            "name": "General pipeline options",
            "description": "Settings to control general pipeline options.",
            "advanced": true,
            "properties": {
                "email": {
                    "name": "Email",
                    "description": "Email address for completion summary.",
                    "type": "string",
                    "required": false
                },
                "multiqc_title": {
                    "name": "MultiQC Report Title",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "type": "string",
                    "required": false
                },
                "multiqc_methods_description": {
                    "name": "MultiQC Methods Description",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "type": "string",
                    "required": false
                }
            }
        },
        "aligner_options": {
            "name": "Aligner Options",
            "description": "Settings to control options for configured aligners.",
            "advanced": true,
            "properties": {
                "kb_workflow": {
                    "name": "KB Workflow",
                    "description": "Type of workflow. Use `lamanno` for RNA velocity based on La Manno et al. 2018 logic. Use `nucleus` for RNA velocity on single-nucleus RNA-seq reads. Use `kite` for feature barcoding. Use `kite: 10xFB` for 10x Genomics Feature Barcoding technology.",
                    "type": "string",
                    "default": "standard",
                    "required": false,
                    "valid": ["standard", "lamanno", "nucleus", "kite", "kite: 10xFB"]
                },
                "star_feature": {
                    "name": "Star Feature",
                    "description": "Quantification type of different transcriptomic feature. Use `GeneFull` on pre-mRNA count for single-nucleus RNA-seq reads. Use `Gene Velocyto` to generate RNA velocity matrix.",
                    "type": "string",
                    "default": "Gene",
                    "required": false,
                    "valid": ["Gene", "GeneFull", "Gene Velocyto"]
                },
                "universc_technology": {
                    "name": "Universc Technology",
                    "description": "Specify a single-cell technology, vendor, or platform. See the UniverSC documentation or GitHub repository for more details.",
                    "type": "string",
                    "default": "10x",
                    "required": false
                },
                "txp2gene": {
                    "name": "txp2gene",
                    "description": "Path to transcript to gene mapping file. This allows the specification of a transcript to gene mapping file for Salmon Alevin and AlevinQC.",
                    "type": "file",
                    "required": false
                },
                "simpleaf_rlen": {
                    "name": "Simpleaf rLen",
                    "description": "It is the target read length the index will be built for, using simpleaf.",
                    "type": "integer",
                    "default": 91,
                    "required": false
                }
            }
        }
    },
    "outputs": [
        {
            "name": "MultiQC report",
            "description": "Report aggregating all QC reporting including FastQC, alignment stats and DeSeq2 plots.",
            "filetype": "html",
            "process": "MULTIQC"
        },
        {
            "name": "Count Matrix",
            "description": "The combined count matrix H5AD file for all samples.",
            "filetype": "h5ad",
            "process": "CONCAT_H5AD"
        }
    ]
}
